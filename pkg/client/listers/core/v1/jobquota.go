/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1 "k8s.io/kubernetes/pkg/api/v1"
)

// JobQuotaLister helps list JobQuotas.
type JobQuotaLister interface {
	// List lists all JobQuotas in the indexer.
	List(selector labels.Selector) (ret []*v1.JobQuota, err error)
	// JobQuotas returns an object that can list and get JobQuotas.
	JobQuotas(namespace string) JobQuotaNamespaceLister
	JobQuotaListerExpansion
}

// jobQuotaLister implements the JobQuotaLister interface.
type jobQuotaLister struct {
	indexer cache.Indexer
}

// NewJobQuotaLister returns a new JobQuotaLister.
func NewJobQuotaLister(indexer cache.Indexer) JobQuotaLister {
	return &jobQuotaLister{indexer: indexer}
}

// List lists all JobQuotas in the indexer.
func (s *jobQuotaLister) List(selector labels.Selector) (ret []*v1.JobQuota, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.JobQuota))
	})
	return ret, err
}

// JobQuotas returns an object that can list and get JobQuotas.
func (s *jobQuotaLister) JobQuotas(namespace string) JobQuotaNamespaceLister {
	return jobQuotaNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JobQuotaNamespaceLister helps list and get JobQuotas.
type JobQuotaNamespaceLister interface {
	// List lists all JobQuotas in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.JobQuota, err error)
	// Get retrieves the JobQuota from the indexer for a given namespace and name.
	Get(name string) (*v1.JobQuota, error)
	JobQuotaNamespaceListerExpansion
}

// jobQuotaNamespaceLister implements the JobQuotaNamespaceLister
// interface.
type jobQuotaNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JobQuotas in the indexer for a given namespace.
func (s jobQuotaNamespaceLister) List(selector labels.Selector) (ret []*v1.JobQuota, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.JobQuota))
	})
	return ret, err
}

// Get retrieves the JobQuota from the indexer for a given namespace and name.
func (s jobQuotaNamespaceLister) Get(name string) (*v1.JobQuota, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("jobquota"), name)
	}
	return obj.(*v1.JobQuota), nil
}
