/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package internalversion

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	scheduling "k8s.io/kubernetes/pkg/apis/scheduling"
)

// PodSchedulingGroupLister helps list PodSchedulingGroups.
type PodSchedulingGroupLister interface {
	// List lists all PodSchedulingGroups in the indexer.
	List(selector labels.Selector) (ret []*scheduling.PodSchedulingGroup, err error)
	// PodSchedulingGroups returns an object that can list and get PodSchedulingGroups.
	PodSchedulingGroups(namespace string) PodSchedulingGroupNamespaceLister
	PodSchedulingGroupListerExpansion
}

// podSchedulingGroupLister implements the PodSchedulingGroupLister interface.
type podSchedulingGroupLister struct {
	indexer cache.Indexer
}

// NewPodSchedulingGroupLister returns a new PodSchedulingGroupLister.
func NewPodSchedulingGroupLister(indexer cache.Indexer) PodSchedulingGroupLister {
	return &podSchedulingGroupLister{indexer: indexer}
}

// List lists all PodSchedulingGroups in the indexer.
func (s *podSchedulingGroupLister) List(selector labels.Selector) (ret []*scheduling.PodSchedulingGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*scheduling.PodSchedulingGroup))
	})
	return ret, err
}

// PodSchedulingGroups returns an object that can list and get PodSchedulingGroups.
func (s *podSchedulingGroupLister) PodSchedulingGroups(namespace string) PodSchedulingGroupNamespaceLister {
	return podSchedulingGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PodSchedulingGroupNamespaceLister helps list and get PodSchedulingGroups.
type PodSchedulingGroupNamespaceLister interface {
	// List lists all PodSchedulingGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*scheduling.PodSchedulingGroup, err error)
	// Get retrieves the PodSchedulingGroup from the indexer for a given namespace and name.
	Get(name string) (*scheduling.PodSchedulingGroup, error)
	PodSchedulingGroupNamespaceListerExpansion
}

// podSchedulingGroupNamespaceLister implements the PodSchedulingGroupNamespaceLister
// interface.
type podSchedulingGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PodSchedulingGroups in the indexer for a given namespace.
func (s podSchedulingGroupNamespaceLister) List(selector labels.Selector) (ret []*scheduling.PodSchedulingGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*scheduling.PodSchedulingGroup))
	})
	return ret, err
}

// Get retrieves the PodSchedulingGroup from the indexer for a given namespace and name.
func (s podSchedulingGroupNamespaceLister) Get(name string) (*scheduling.PodSchedulingGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(scheduling.Resource("podschedulinggroup"), name)
	}
	return obj.(*scheduling.PodSchedulingGroup), nil
}
